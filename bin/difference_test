#!/usr/bin/env ruby

require "rvg/rvg"
include Magick

RVG::dpi = 72

# base function for making an image with a circle
# yields to block to allow further transformation of the circle
def draw_circle
  RVG.new(2.5.in, 2.5.in).viewbox(0,0,250,250) do |canvas|
    canvas.background_fill = 'white'
    circle = canvas.circle(50).styles(fill: "yellow")
    yield(circle) if block_given?
  end.draw
end
alias :standard :draw_circle

# draw and equivalent circle (given radial symmetry)
def rotated_15
  draw_circle { |c| c.rotate(15) }
end

# draw and equivalent circle (given radial symmetry)
def rotated_360
  draw_circle { |c| c.rotate(360) }
end

# draw a slightly offset circle
def slightly_translated
  draw_circle { |c| c.translate(1,1) }
end

# draw a different color circle
def green
  draw_circle { |c| c.styles(fill: "green")}
end

# {Image#difference} returns an array with the following values:
#  * mean error per pixel
#  * normalized mean error
#  * normalized maximum error
# see also http://www.imagemagick.org/RMagick/doc/image1.html#difference
# the first three should be no / very little difference
p standard.difference(standard) # => [0.0, 0.0, 0.0]
p standard.difference(rotated_15) # => [0.018165208399295807, 2.678389525234781e-10, 0.0018869628347447929]
p standard.difference(rotated_360) # => [0.0, 0.0, 0.0]
# the last two should show some / significan difference
p standard.difference(slightly_translated) # => [26.4636173248291, 0.0002739030632127751, 0.9933167868314641]
p standard.difference(green) # => [813.5169067382812, 0.01026567775153789, 1.0]

